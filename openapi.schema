openapi: 3.0.3
info:
  title: Nutrition App API
  description: API for managing user information, dietary preferences, health conditions, and more in a nutrition app.
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Local server

paths:
  /user-health-info:
    post:
      summary: Create new user health information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserHealthInfo'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserHealthInfo'
        '400':
          description: Bad Request
    get:
      summary: Get all user health information
      responses:
        '200':
          description: A list of user health information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserHealthInfo'

  /user-health-info/{userId}:
    get:
      summary: Get user health information by ID
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: The user ID
      responses:
        '200':
          description: User health information found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserHealthInfo'
        '404':
          description: User not found
    put:
      summary: Update user health information
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: The user ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserHealthInfo'
      responses:
        '200':
          description: User health information updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserHealthInfo'
        '404':
          description: User not found
    delete:
      summary: Delete user health information
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: The user ID
      responses:
        '204':
          description: User health information deleted
        '404':
          description: User not found

  /dietary-preferences:
    post:
      summary: Add dietary preferences
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DietaryPreferences'
      responses:
        '201':
          description: Dietary preferences added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DietaryPreferences'
        '400':
          description: Bad Request
    get:
      summary: Get all dietary preferences
      responses:
        '200':
          description: A list of dietary preferences
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DietaryPreferences'

  /dietary-preferences/{userId}:
    get:
      summary: Get dietary preferences by user ID
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: The user ID
      responses:
        '200':
          description: Dietary preferences found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DietaryPreferences'
        '404':
          description: User not found
    put:
      summary: Update dietary preferences
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: The user ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DietaryPreferences'
      responses:
        '200':
          description: Dietary preferences updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DietaryPreferences'
        '404':
          description: User not found
    delete:
      summary: Delete dietary preferences
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: The user ID
      responses:
        '204':
          description: Dietary preferences deleted
        '404':
          description: User not found

components:
  schemas:
    UserHealthInfo:
      type: object
      properties:
        userId:
          type: integer
        age:
          type: integer
        genderAssignedAtBirth:
          type: string
        currentGenderIdentity:
          type: string
        hormoneUse:
          type: string
        height:
          type: number
        weight:
          type: number
        bodyType:
          type: string
        bodyFatPercentage:
          type: number
        skinTone:
          type: string
        ethnicBackground:
          type: string
        activityLevel:
          type: string
        mealTimingPreferences:
          type: string
        fluidIntakeWater:
          type: number
        fluidIntakeOther:
          type: string
        seasonalDietaryChanges:
          type: string
        travelFrequency:
          type: string

    DietaryPreferences:
      type: object
      properties:
        userId:
          type: integer
        dietaryPreference:
          type: string

    FoodAllergiesIntolerances:
      type: object
      properties:
        userId:
          type: integer
        foodAllergyIntolerance:
          type: string

    SpecificFoodAvoidances:
      type: object
      properties:
        userId:
          type: integer
        foodAvoidance:
          type: string

    NutritionalDeficiencies:
      type: object
      properties:
        userId:
          type: integer
        deficiency:
          type: string

    FoodConsumptionFrequency:
      type: object
      properties:
        userId:
          type: integer
        foodName:
          type: string
        frequency:
          type: string

    CookingHabits:
      type: object
      properties:
        userId:
          type: integer
        cookingHabit:
          type: string
        mealPreparationPreference:
          type: string
        preferredIngredients:
          type: string
        dislikedIngredients:
          type: string
        favoriteCuisines:
          type: string

    HealthConditions:
      type: object
      properties:
        userId:
          type: integer
        healthCondition:
          type: string

    HealthGoals:
      type: object
      properties:
        userId:
          type: integer
        healthGoal:
          type: string

    FamilyMedicalHistory:
      type: object
      properties:
        userId:
          type: integer
        familyMedicalHistory:
          type: string

    EatingBehavior:
      type: object
      properties:
        userId:
          type: integer
        eatingBehavior:
          type: string

    FoodAddictionConcerns:
      type: object
      properties:
        userId:
          type: integer
        foodAddictionConcern:
          type: boolean

    AdverseReactionsToFoods:
      type: object
      properties:
        userId:
          type: integer
        adverseReaction:
          type: string

    HealthMonitoringTechnology:
      type: object
      properties:
        userId:
          type: integer
        healthMonitoringDevice:
          type: string

    HistoricalEatingPatterns:
      type: object
      properties:
        userId:
          type: integer
        mealTime:
          type: string
        foodItems:
          type: string

    EatingOutFrequency:
      type: object
      properties:
        userId:
          type: integer
        frequency:
          type: string

    SnackingHabits:
      type: object
      properties:
        userId:
          type: integer
        snackingHabit:
          type: string

    AlcoholConsumption:
      type: object
      properties:
        userId:
          type: integer
        alcoholConsumption:
          type: string

    SmokingStatus:
      type: object
      properties:
        userId:
          type: integer
        smokingStatus:
          type: string

    RecentDietChanges:
      type: object
      properties:
        userId:
          type: integer
        recentDietChange:
          type: boolean

    FeedbackOnPastDiets:
      type: object
      properties:
        userId:
          type: integer
        feedback:
          type: string

    EatingScheduleFlexibility:
      type: object
      properties:
        userId:
          type: integer
        eatingScheduleFlexibility:
          type: string

    MicrobiomeData:
      type: object
      properties:
        userId:
          type: integer
        microbiomeDiversityScore:
          type: number
        specificBacteriaLevels:
          type: array
          items:
            type: number

    CGMData:
      type: object
      properties:
        userId:
          type: integer
        averageBloodGlucoseLevels:
          type: number
        glucoseVariability:
          type: number

    LipidProfileData:
      type: object
      properties:
        userId:
          type: integer
        totalCholesterol:
          type: number
        hdl:
          type: number
        ldl:
          type: number
        triglycerides:
          type: number

    OtherHealthTests:
      type: object
      properties:
        userId:
          type: integer
        testName:
          type: string
        testValue:
          type: number
        testUnits:
          type: string

    EnvironmentalFactors:
      type: object
      properties:
        userId:
          type: integer
        currentLocation:
          type: string
        temperature:
          type: number
        humidity:
          type: number
        weatherCondition:
          type: string
